package {{ .Package }}

import (
	"github.com/salsadigitalauorg/shipshape/pkg/data"
	"github.com/salsadigitalauorg/shipshape/pkg/fact"
)

// Code generated by fact-plugin --plugin={{ .Plugin }} --package={{ .Package }}; DO NOT EDIT.

func (p *{{ .Plugin }}) GetName() string {
	return p.Name
}

func (p *{{ .Plugin }}) GetData() interface{} {
	return p.data
}

func (p *{{ .Plugin }}) GetFormat() data.DataFormat {
	return p.Format
}

func (p *{{ .Plugin }}) GetConnectionName() string {
	return p.ConnectionName
}

func (p *{{ .Plugin }}) GetInputName() string {
	return p.InputName
}

func (p *{{ .Plugin }}) GetAdditionalInputNames() []string {
	return p.AdditionalInputNames
}

func (p *{{ .Plugin }}) GetErrors() []error {
	if p.input != nil {
		return append(p.errors, p.input.GetErrors()...)
	}
	return p.errors
}

func (p *{{ .Plugin }}) ValidateConnection() error {
	connPlugin, err := fact.ValidatePluginConnection(p)
	if err != nil {
		return err
	}
	p.connection = connPlugin
	return nil
}

func (p *{{ .Plugin }}) ValidateInput() error {
	inputPlugin, err := fact.ValidatePluginInput(p)
	if err != nil {
		return err
	}

	p.input = inputPlugin
	return nil
}

func (p *{{ .Plugin }}) LoadAdditionalInputs() []error {
	additionalInputs, errs := fact.LoadPluginAdditionalInputs(p)
	if len(errs) > 0 {
		return errs
	}

	p.additionalInputs = additionalInputs
	return nil
}
